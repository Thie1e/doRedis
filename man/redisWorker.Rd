% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redisWorker.R
\name{redisWorker}
\alias{redisWorker}
\title{Initialize a doRedis worker process.}
\usage{
redisWorker(queue, host = "localhost", port = 6379, iter = Inf,
  timeout = 30, log = stdout(), connected = FALSE, password = NULL,
  sentinel = interactive(), ...)
}
\arguments{
\item{queue}{The doRedis work queue name or a vector of queue names.}

\item{host}{The Redis database host name or IP address.}

\item{port}{The Redis database port number.}

\item{iter}{Maximum number of tasks to process before exiting the worker loop.}

\item{timeout}{Timeout in seconds after which the work queue is deleted that the worker terminates.}

\item{log}{Log messages to the specified file connection.}

\item{connected}{Is the R session creating the worker already connected to Redis?}

\item{password}{Optional Redis database password.}

\item{sentinel}{If \code{TRUE} start a sentinel thread (see Note).}

\item{...}{Optional additional parameters passed to \code{\link{redisConnect}}}
}
\value{
NULL is invisibly returned.
}
\description{
The redisWorker function enrolls the current R session in one or
more doRedis worker pools specified by the work queue names. The worker
loop takes over the R session until the work queue(s) are deleted, after
which at most \code{timeout} seconds the worker loop exits, or until
the worker has processed \code{iter} tasks.
}
\note{
The \code{sentinel} option defaults to \code{TRUE} in non-interactive
R sessions. When \code{TRUE}, a rather Draconian sentinel thread is started
that terminates the R process if a connection to Redis is lost for too long.
The thread checks for Redis connectivity every 10 seconds and will retry a
connection up to three times before exiting.

The sentinel thread is useful in circumstances where R worker processes are
run in a loop, for example using the example daemon process in available
from the \code{scripts/redis-worker-installer.sh} script installed with the package.
Using the sentinel helps worker processes tolerate failure of the master Redis
node, recovering eventually in a new R process when Redis is available again.
}
\seealso{
\code{\link{registerDoRedis}}, \code{\link{startLocalWorkers}}
}

